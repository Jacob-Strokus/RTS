// Editor helper to run simple AI ticks
using UnityEditor; using UnityEngine; using FrontierAges.Sim; using FrontierAges.Sim.AI;
public static class AIExampleRunner {
    [MenuItem("Sim/Run Simple AI 200 Ticks")] public static void Run(){ var sim = new Simulator(new CommandQueue()); sim.State.Factions[0].PopCap=50; sim.State.Factions[1].PopCap=50; short worker = sim.RegisterUnitType(new UnitTypeData{ MoveSpeedMilliPerSec=2500, MaxHP=40, GatherRatePerSec=2, CarryCapacity=10, Flags=1, PopCost=1 }); short soldier = sim.RegisterUnitType(new UnitTypeData{ MoveSpeedMilliPerSec=3000, MaxHP=60, AttackDamageBase=8, AttackRange=1400, AttackCooldownMs=1000, DTMelee=1f, PopCost=1 }); for(int i=0;i<4;i++) sim.SpawnUnit(worker,0,1000+i*200,1000,0); for(int i=0;i<4;i++) sim.SpawnUnit(worker,1,8000+i*200,8000,0); for(int i=0;i<2;i++) sim.SpawnUnit(soldier,0,1500+i*200,1500,0); for(int i=0;i<2;i++) sim.SpawnUnit(soldier,1,7500+i*200,7500,0); sim.SpawnResourceNode(0,4000,4000,1000); var ai0 = new RootAI(new Sequence().Add(new AssignIdleWorkerToResource()).Add(new Repeat(new FindEnemyAndAttack(5000))), new AIContext(sim,0,0xA1u)); var ai1 = new RootAI(new Sequence().Add(new AssignIdleWorkerToResource()).Add(new Repeat(new FindEnemyAndAttack(5000))), new AIContext(sim,1,0xB2u)); for(int t=0;t<200;t++){ ai0.Tick(); ai1.Tick(); sim.Tick(); } Debug.Log("AI run complete. Last hash: 0x"+sim.LastTickHash.ToString("X16")); }
}
